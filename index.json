[{"content":"Hello! I\u0026rsquo;m Aria, and this is my personal blog.üòé\nMy Background Sept 2023 ‚Äë Expected May 2025\nM.S. in Software Design and Development‰∏®University of Galway\nJan 2018 ‚Äë Nov 2022\nEnglish Teacher‰∏®The New Oriental Education Technology Group Co., Ltd.\nSep 2013 ‚Äë Jun 2017\nB.A. in French Language and Literature‰∏®Zhejiang University\nMy Interests ‚úàÔ∏èTraveling (Travelled to 29 of China\u0026rsquo;s 34 provinces and 12 countries including China!)\nüì∏Photography (Canon EOS 60D \u0026amp; Nikon 1 j5)\nüéÆVideo games (Switch \u0026amp; Steam)\nThank you for visiting my blog. I hope you find the content here interesting and useful!üòä\n","permalink":"https://levoyage.github.io/about/","summary":"Hello! I\u0026rsquo;m Aria, and this is my personal blog.üòé My Background Sept 2023 ‚Äë Expected May 2025 M.S. in Software Design and Development‰∏®University of Galway Jan 2018 ‚Äë Nov 2022 English Teacher‰∏®The New Oriental","title":"About Me"},{"content":"Welcome to my album! Here are some of my favorite snapshots taken in my journey.üèÉüß≥\n\u003c!DOCTYPE html\u003e Research Base of Giant Panda Breeding, Chengdu, China, Apr 2016 Pompidou Centre, Paris, France, Jan 2016 Fontainebleau Palace, Fontainebleau, France, Jan 2015 Sagrada Fam√≠lia, Barcelona, Spain, Oct 2015 Humble Administrator\u0026#39;s Garden, Suzhou, China, Nov 2014 Xixi National Wetland Park, Hangzhou, China, May 2014 West Lake, Hangzhou, China, Mar 2014 ","permalink":"https://levoyage.github.io/album/","summary":"Welcome to my album! Here are some of my favorite snapshots taken in my journey.üèÉüß≥ \u003c!DOCTYPE html\u003e Research Base of Giant Panda Breeding, Chengdu, China, Apr 2016 Pompidou Centre, Paris, France, Jan 2016 Fontainebleau Palace, Fontainebleau, France, Jan 2015 Sagrada Fam√≠lia, Barcelona, Spain, Oct 2015 Humble Administrator\u0026#39;s Garden, Suzhou, China, Nov 2014 Xixi National","title":"Album"},{"content":"Data Visualization Overview https://public-paws.wmcloud.org/User:Aria0325/data/Kefan%20Chen%20-%20T356498%20Project%20Report-4.0.ipynb\nIntroduction During my participation in Outreachy project, I developed a web application to visualize the evolution of Wikipedia articles on climate change. This project aimed to help WikiProjects and the public understand how article quality has changed over time, leveraging a dataset provided by the Wikimedia Foundation‚Äôs Research team. The experience provided me with practical exposure to full-stack development, advanced data processing, and visualization techniques, enhancing my skills in these areas.\nDevelopment Process Technology Stack and Tools To build the Climate Change Visualization Web Application, I used the following technologies and tools:\nBackend: Flask: A lightweight WSGI web application framework used for building the backend infrastructure and handling API requests. Pandas: A powerful data manipulation and analysis library for processing and aggregating data. Matplotlib: A plotting library for creating dynamic visualizations. Gunicorn: A WSGI HTTP server for running the Flask application in a production environment. Frontend: HTML: For structuring the web pages. Bootstrap: For responsive and mobile-first web design. CSS: For styling the web application. Project Modules and Development Steps Climate Change Visualization Web Application Backend Development:\nLoaded and preprocessed the dataset containing feature values and predicted quality scores using Pandas. Developed REST API endpoints to handle requests for data and visualizations, enabling dynamic interaction with the frontend. Used Matplotlib to create visualizations based on user inputs, such as date range and selected features. Frontend Development:\nCreated a responsive user interface using HTML, Bootstrap, and CSS to ensure accessibility across various devices. Challenges and Solutions Challenge 1: Data Filtering and Aggregation Solution: Utilized Pandas to implement efficient data filtering, aggregation, and resampling techniques. This allowed the application to provide detailed explorations of specific metrics within customizable time frames.\nChallenge 2: Dynamic Visualization Rendering Solution: Leveraged Matplotlib to generate dynamic and interactive visualizations that reflect user-selected data features and time ranges, enhancing the application\u0026rsquo;s interactivity and usability.\nChallenge 3: Responsive Design Implementation Solution: Designed a responsive user interface with Bootstrap, ensuring that the application is accessible and user-friendly on various devices, including desktops, tablets, and smartphones.\nProject Outcomes Developed a robust tool that allows WikiProjects and the public to explore the quality evolution of Wikipedia articles on climate change, providing valuable insights into collaborative editing efforts. Gained proficiency in Flask, Pandas, Matplotlib, and responsive web design, significantly enhancing my technical capabilities. The project contributed to increased public awareness and understanding of climate change information dynamics, showcasing the practical application of data visualization in educational and research contexts. Future Improvements Implement more advanced filtering options, comparison features, and trend analysis tools to provide deeper insights into the data. Optimize data processing and visualization rendering for better performance, particularly with large datasets. Improve the UI/UX by incorporating more interactive elements and advanced design patterns. ","permalink":"https://levoyage.github.io/posts/tech/data-visualization/","summary":"Data Visualization Overview https://public-paws.wmcloud.org/User:Aria0325/data/Kefan%20Chen%20-%20T356498%20Project%20Report-4.0.ipynb\nIntroduction During my participation in Outreachy project, I developed a web application to visualize the evolution of Wikipedia articles on climate change. This project aimed to help WikiProjects and the public understand how article quality has changed over time, leveraging a dataset provided by the Wikimedia Foundation‚Äôs Research team. The experience provided me with practical exposure to full-stack development, advanced data processing, and visualization techniques, enhancing my skills in these areas.","title":"Data visualization for the evolution of Wikipedia articles"},{"content":"URL \u0026amp; Frontend Preview http://employees-management-system.s3-website-us-east-1.amazonaws.com/\n\u003c!DOCTYPE html\u003e List of Employee List of Departments Add Employee Add Department Update Employee Update Department Submit Error Reminder Introduction This is an extracurricular project that I completed in the first semester of my master\u0026rsquo;s program. I chose it because its technology stack overlapped significantly with what I was studying at university. Having previously developed a pure front-end e-commerce website project using React, the front-end part of this project wasn\u0026rsquo;t very challenging for me. However, what made this project meaningful was that it exposed me to the framework of a complete web product and the general steps required to complete it. This project served as an excellent practice opportunity, and I highly recommend it to software engineering students. Additionally, I deployed the application on AWS, adding a practical aspect of cloud deployment to my learning experience.\nDevelopment Process Technology Stack and Tools To build the Employee Management System, I used the following technologies and tools:\nBackend: Spring Boot 3: To provide the server-side infrastructure and business logic. Spring Data JPA (Hibernate 6): For data persistence. MySQL Database: As the database management system. IntelliJ IDEA: As the integrated development environment (IDE). Maven: For project build and dependency management. Postman: For testing REST APIs. Frontend: React JS 18+: For building user interfaces. Vite JS: As the build tool. Bootstrap CSS: For styling web pages. JavaScript: The primary scripting language. NPM: For package management. Visual Studio Code (VS Code): As the IDE. Axios: For making HTTP requests. Project Modules and Development Steps Employee Management System Backend Development:\nDefined the employee entity with fields such as id, name, department, and salary. Created a repository interface for database operations. Developed REST APIs for adding, retrieving, updating, and deleting employees. Frontend Development:\nCreated React components for listing, adding, updating, and deleting employees. Implemented form handling and validation for employee data. Used Axios to make API calls and integrate the frontend with the backend services. Challenges and Solutions Challenge 1: Managing State in React Solution: Implemented React hooks to manage state and lifecycle methods effectively. Used context API for global state management.\nChallenge 2: Securing REST APIs Solution: Integrated Spring Security and JWT to secure REST APIs. Configured roles and permissions to ensure authorized access.\nChallenge 3: Database Integration and Migrations Solution: Used Spring Data JPA with MySQL for seamless database operations. Leveraged Liquibase for database migrations and version control.\nChallenge 4: Form Validation and Error Handling Solution: Implemented both client-side and server-side validation. Used React\u0026rsquo;s form handling capabilities and Spring Boot\u0026rsquo;s validation annotations to ensure data integrity.\nProject Outcomes Built a robust Employee Management application with seamless backend and frontend integration. Gained proficiency in Spring Boot, React JS, Spring Security, and JWT. Overcame various challenges, enhancing problem-solving and debugging skills. Future Improvements Already achieved: After completing the development, I took the additional step of deploying the Employee Management System on AWS. This involved setting up an EC2 instance, configuring the environment, and deploying the backend and frontend applications. The process of deploying to AWS not only gave me hands-on experience with cloud services but also showcased the real-world applicability of my project. Add more features such as advanced search, filters, and reporting in the Employee Management System. Optimize the application for better performance, particularly in handling large datasets. Enhance the UI/UX by incorporating advanced design patterns and interactive elements. ","permalink":"https://levoyage.github.io/posts/tech/employee-management-system/","summary":"URL \u0026amp; Frontend Preview http://employees-management-system.s3-website-us-east-1.amazonaws.com/ \u003c!DOCTYPE html\u003e List of Employee List of Departments Add Employee Add Department Update Employee Update Department Submit Error Reminder Introduction This is an extracurricular project that I completed in the first semester of my master\u0026rsquo;s program. I chose it because its technology stack overlapped significantly with what I was studying at university. Having previously developed a pure front-end e-commerce website project using React, the front-end","title":"How to Build a Employee Management System"},{"content":" How to Visit My Island Use DA code in the game: DA-3444-7211-0416\nIsland Overview üëâPartly Inspired, Partly Original: Images and DA code are for island building reference only and cannot be reposted or used commercially.\nüëâColor Scheme \u0026amp; Style: Warm tones with a European/Western countryside feel, mixed with small areas of Japanese and forest themes.\nüëâDesign Guidelines: Use system tiles as much as possible. Avoid using simple wall panels for fake scenery.\nüëâConnectivity: Most areas are connected; if you can\u0026rsquo;t find your way, try adjusting your perspective.\nüëâHouse Interior: All interiors of the main house are complete and open for visiting. The hot spring inn is a small house; the first floor is mostly done, but the other two floors are not yet finished.\nü•≥Finally, enjoy Your Visit!\nMeet the Islanders Island Gallery Wait for updating\u0026hellip;\nReference Information Wait for updating\u0026hellip; ","permalink":"https://levoyage.github.io/posts/life/my-island-1.0/","summary":"How to Visit My Island Use DA code in the game: DA-3444-7211-0416 Island Overview üëâPartly Inspired, Partly Original: Images and DA code are for island building reference only and cannot be reposted or used commercially. üëâColor Scheme \u0026amp; Style: Warm tones with a European/Western countryside feel, mixed with small areas of Japanese and forest themes. üëâDes","title":"My Island 1.0"},{"content":"No posts so the archive is not available now.\nPlease click here to return to the home page.\n","permalink":"https://levoyage.github.io/archive/","summary":"No posts so the archive is not available now.\nPlease click here to return to the home page.","title":""}]